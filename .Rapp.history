library(devtools)
library(roxygen2)
setwd("/Users/jaeheejung/Desktop/Spring 2014/Applied Statistical Programming/BayesianModelAveraging")
current.code <- as.package("BMAPack")
load_all(current.code)
document(current.code)
myX <- matrix(data=c(0.31,0.33,-2.81,1.35,-0.48,0.14,3.84,-0.7,-0.67,-0.74,-0.37,-3.99,1.46,-0.89,0.27,-0.96,-0.92,-2.42,0.63,-1.44,-1.22,-2.36,2.7,3.79,-2.12,-3.46,2.77,-0.76,0.77,-0.9),nrow=10,ncol=3,dimnames=list(NULL,c("A","B","C")))
myY <- matrix(c(-1.82,2.49,0.08,1.04,1.61,0.48,0.78,-0.79,1.79,-0.29),dimnames=list(NULL,"D"))
fitBMA(myX,myY,3)
z < - fitBMA(myX,myY,3)
z <- fitBMA(myX,myY,3)
plot(z)
myX <- matrix(data=c(0.31,0.33,-2.81,1.35,-0.48,0.14,3.84,-0.7,-0.67,-0.74,-0.37,-3.99,1.46,-0.89,0.27,-0.96,-0.92,-2.42,0.63,-1.44,-1.22,-2.36,2.7,3.79,-2.12,-3.46,2.77,-0.76,0.77,-0.9),nrow=10,ncol=3,dimnames=list(NULL,c("A","B","C")))
myY <- matrix(c(-1.82,2.49,0.08,1.04,1.61,0.48,0.78,-0.79,1.79,-0.29),dimnames=list(NULL,"D"))
x <- myX
y <- myY
x <- apply(x,2,function(X){(X-mean(X))/sd(X)})
y <- apply(y,2,function(X){(X-mean(X))/sd(X)})
covariate.names <- colnames(x)
outcome.name <- colnames(y)
combinations <- unlist(lapply(1:ncol(x),function(X){combn(ncol(x),X,simplify=F)}),recursive=F)
formulas <- sapply(combinations,function(X){paste(paste(outcome.name,"~","-1","+"),paste(covariate.names[X],collapse="+"))})
all.lm <- lapply(formulas,function(X){lm(as.formula(X),data=data.frame(y,x))})
coefs <- sapply(all.lm,coef)
coefs
r2s <- sapply(all.lm,function(X){summary(X)$r.squared})
r2s
n <- nrow(x)
k <- length(all.lm)
p <- NULL
for(i in 1:length(coefs)){
p <- c(p,length(coefs[[i]]))
}
p
B <- NULL
for(i in 1:k){
B <- c(B,(1+g)^((n-p[i]-1)/2)*(1+g*(1-r2s[i]))^(-(n-1)/2))
}
g=3
B <- NULL
for(i in 1:k){
B <- c(B,(1+g)^((n-p[i]-1)/2)*(1+g*(1-r2s[i]))^(-(n-1)/2))
}
B
B <- sum(B)
odds <- NULL#
	for(i in 1:k){#
		odds <- c(odds,((1+g)^((n-p[i]-1)/2)*(1+g*(1-r2s[i]))^(-(n-1)/2))/B)#
	}
z <- list()
z[[1]] <- letters[seq(2,20,by=2)]
z
names(z[[1]]) <- LETTERS[c(1:length(z[[1]]))]
z
z[[2]] <- letters[seq(3,20, by=3)]#
names(z[[2]]) <- LETTERS[seq(3,20, by=3)]#
z[[3]] <- letters[seq(4,20, by=4)]#
names(z[[3]]) <- LETTERS[seq(4,20, by=4)]
z
do.call(rbind,x)
do.call(rbind,z)
require(plyr)
nam <- sapply(z, names)
nam
unam <- unique(unlist(nam))
unam
len <- sapply(z, length)
len
out <- vector("list", length(len))
out
for (i in seq_along(len)) {#
        out[[i]] <- unname(x[[i]])[match(unam, nam[[i]])]#
    }
seq_along(len)
z
unam
nam
match(unam,nam[[2]])
unname(z[[2]])[match(unam, nam[[2]])]
z
?setNames
out
for (i in seq_along(len)) {#
        out[[i]] <- unname(z[[i]])[match(unam, nam[[i]])]#
    }
out
unam
setNames(as.data.frame(do.call(rbind, out), stringsAsFactors=FALSE), unam)
odds
r2s
coefs
nam <- sapply(coefs, names)
nam
covariates <- sapply(coefs, names)
unam <- unique(unlist(nam))
unam <- unique(unlist(covariates))
unam
covariates <- sapply(coefs, names)
covariates <- unique(unlist(covariates))
len <- sapply(coefs, length)
len
p
covariate.names
len
out <- vector("list", length(p))
out
sapply(coefs,names)
coefs.mod <- sapply(coefs,names)
coefs.mod
unique(unlist(covariates.mod))
covariates.mod <- sapply(coefs,names)
unique(unlist(covariates.mod))
sapply(coefs,length)
vector("list",length(covariate.number))
covariate.number <- sapply(coefs,length)
vector("list",length(covariate.number))
coefs.df <- function(coefs){#
		covariates.mod <- sapply(coefs,names)#
		covariates <- unique(unlist(covariates.mod))#
		covariate.number <- sapply(coefs,length)#
		mod <- vector("list",length(covariate.number))#
		for(i in seq_along(covariate.number)){#
			covariate.number[[i]] <- unname(coefs[[i]])[match(covariates,covariates.mod[[i]])]#
		}#
		setNames(as.data.frame(do.call(rbind,covariate.number),stringsAsFactors=FALSE,covariates))#
	}
coefs
covariates.mod <- sapply(coefs,names)#
	covariates <- unique(unlist(covariates.mod))#
	covariate.number <- sapply(coefs,length)#
	mod <- vector("list",length(covariate.number))#
	for(i in seq_along(covariate.number)){#
			covariate.number[[i]] <- unname(coefs[[i]])[match(covariates,covariates.mod[[i]])]#
		}#
	coefs.df <- setNames(as.data.frame(do.call(rbind,covariate.number),stringsAsFactors=FALSE,covariates))
covariates.mod <- sapply(coefs,names)
covariates <- unique(unlist(covariates.mod))
covariate.number <- sapply(coefs,length)
mod <- vector("list",length(covariate.number))
for(i in seq_along(covariate.number)){
coefs.df <- setNames(as.data.frame(do.call(rbind,covariate.number),stringsAsFactors=FALSE,covariates))
}
?nm
?setNames
covariates
covariates.mod <- sapply(coefs,names)#
	covariates <- unique(unlist(covariates.mod))#
	covariate.number <- sapply(coefs,length)#
	mod <- vector("list",length(covariate.number))#
	for(i in seq_along(covariate.number)){#
			covariate.number[[i]] <- unname(coefs[[i]])[match(covariates,covariates.mod[[i]])]#
		}#
	coefs.df <- setNames(as.data.frame(do.call(rbind,covariate.number),stringsAsFactors=FALSE,nm=covariates))
covariates.mod <- sapply(coefs,names)#
	covariates <- unique(unlist(covariates.mod))#
	covariate.number <- sapply(coefs,length)#
	mod <- vector("list",length(covariate.number))#
	for(i in seq_along(covariate.number)){#
			covariate.number[[i]] <- unname(coefs[[i]])[match(covariates,covariates.mod[[i]])]#
		}#
	coefs.df <- setNames(as.data.frame(do.call(rbind,covariate.number),stringsAsFactors=FALSE),nm=covariates)
covariates.mod <- sapply(coefs,names)
covariates.mod
covariates <- unique(unlist(covariates.mod))
covariates
covariate.number <- sapply(coefs,length)
covariate.number
mod <- vector("list",length(covariate.number))
mod
covariates.mod <- sapply(coefs,names)#
	covariates <- unique(unlist(covariates.mod))#
	covariate.number <- sapply(coefs,length)#
	mod <- vector("list",length(covariate.number))#
	for(i in seq_along(covariate.number)){#
			mod[[i]] <- unname(coefs[[i]])[match(covariates,covariates.mod[[i]])]#
		}#
	coefs.df <- setNames(as.data.frame(do.call(rbind,mod),stringsAsFactors=FALSE),nm=covariates)
coefs.df
coefs.df[1,]
coefs.df[1,]$"A"
coefs.df[1,][1]
coefs.df[1,][2]
coefs.df[1,1]
coefs.df[1,2]
ev <- NULL
for(i in 1:k){#
		ev[i] <- c(ev,(g/(g+1))*coefs.df[i,1])#
	}
g
coefs.df[1,1]
coefs.df[4,1]
apply(coefs.df,2,function(X){(g/(g+1))*X})
coefs.df
odds
ev <- apply(coefs.df,2,function(X){(g/(g+1))*X})
ev
odds
nrow(coefs.df)
ncol(coefs.df)
ev <- NULL
ev <- NULL#
	for(i in 1:nrow(coefs.df)){#
		for(j in 1:ncol(coefs.df)){#
			ev <- c(ev,(g/(g+1))*coefs.df[i,j])#
		}#
	}
ev
?data.frame
matrix(ev,ncol=ncol(coefs.df))
matrix(ev,ncol=ncol(coefs.df),byrow=TRUE)
ev <- NULL#
	for(i in 1:nrow(coefs.df)){#
		for(j in 1:ncol(coefs.df)){#
			ev <- c(ev,(g/(g+1))*coefs.df[i,j])#
		}#
	}#
	ev <- matrix(ev,ncol=ncol(coefs.df),byrow=TRUE)
ev
colsum(ev)
?colsums
colSums(ev)
colSums(ev,na.rm=TRUE)
each.ev <- NULL
for(i in 1:ncol(ev)){#
		each.ev <- c(each.ev,odds*ev[,i])#
	}
each.ev
each.ev <- NULL#
	for(i in 1:ncol(ev)){#
		each.ev <- c(each.ev,sum(odds*ev[,i]))#
	}
each.ev
each.ev <- NULL#
	for(i in 1:ncol(ev)){#
		each.ev <- c(each.ev,sum(odds*ev[,i],na.rm=TRUE))#
	}
each.ev
odds
coefs
r2s
coefs.df
odds
rownames(coefs.df)
rownames(coefs.df[,i]!=NA)
rownames(!is.na(coefs.df[,i]))
!is.na(coefs.df[,i])
!is.na(coefs.df[,1])
rownames(!is.na(coefs.df[,1]))
which(!is.na(coefs.df[,1]))
index <- matrix(NULL)
index
index <- matrix(NULL,nrow=ncol(coefs.df))
index <- matrix(NA,nrow=ncol(coefs.df))
index
for(i in 1:ncol(coefs.df)){#
		index[i] <- which(!is.na(coefs.df[,i]))#
	}
which(!is.na(coefs.df[,1]))
which(!is.na(coefs.df[,2]))
which(!is.na(coefs.df[,3]))
index <- list(NULL)
index
for(i in 1:ncol(coefs.df)){#
		index[i] <- which(!is.na(coefs.df[,i]))#
	}
index[1] <- which(!is.na(coefs.df[,3]))
index
index <- list(NULL)
index[[1]] <- which(!is.na(coefs.df[,3]))
index
index <- list(NULL)#
	for(i in 1:ncol(coefs.df)){#
		index[[i]] <- which(!is.na(coefs.df[,i]))#
	}
index
odds
odds[index[[1]]]
odds[index[[2]]]
odds[index[[3]]]
odds
nonzero <- NULL
nonzero <- NULL#
	for(i in 1:ncol(coefs.df)){#
		nonzero <- c(nonzero,sum(odds[index[[i]]])/sum(odds))#
	}
nonzero
coefs
r2s
odds
each.ev
nonzero
each.ev
names(each.ev)
names(each.ev) <- c(covariate.names)
each.ev
names(each.ev)
nonzero
names(nonzero) <- c(covariate.names)
nonzero
library(devtools)
library(roxygen2)
setwd("/Users/jaeheejung/Desktop/Spring 2014/Applied Statistical Programming/BayesianModelAveraging")
current.code <- as.package("BMAPack")
load_all(current.code)
library(devtools)
library(roxygen2)
setwd("/Users/jaeheejung/Desktop/Spring 2014/Applied Statistical Programming/BayesianModelAveraging")
current.code <- as.package("BMAPack")
load_all(current.code)
document(current.code)
myX <- matrix(data=c(0.31,0.33,-2.81,1.35,-0.48,0.14,3.84,-0.7,-0.67,-0.74,-0.37,-3.99,1.46,-0.89,0.27,-0.96,-0.92,-2.42,0.63,-1.44,-1.22,-2.36,2.7,3.79,-2.12,-3.46,2.77,-0.76,0.77,-0.9),nrow=10,ncol=3,dimnames=list(NULL,c("A","B","C")))
myY <- matrix(c(-1.82,2.49,0.08,1.04,1.61,0.48,0.78,-0.79,1.79,-0.29),dimnames=list(NULL,"D"))
fitBMA(myX,myY,3)
a <- fitBMA(myX,myY,3)
plot(a)
summary(a)
library(devtools)
library(roxygen2)
setwd("/Users/jaeheejung/Desktop/Spring 2014/Applied Statistical Programming/BayesianModelAveraging")
current.code <- as.package("BMAPack")
load_all(current.code)
document(current.code)
myX <- matrix(data=c(0.31,0.33,-2.81,1.35,-0.48,0.14,3.84,-0.7,-0.67,-0.74,-0.37,-3.99,1.46,-0.89,0.27,-0.96,-0.92,-2.42,0.63,-1.44,-1.22,-2.36,2.7,3.79,-2.12,-3.46,2.77,-0.76,0.77,-0.9),nrow=10,ncol=3,dimnames=list(NULL,c("A","B","C")))
myY <- matrix(c(-1.82,2.49,0.08,1.04,1.61,0.48,0.78,-0.79,1.79,-0.29),dimnames=list(NULL,"D"))
a <- fitBMA(myX,myY,4)
a
summary(a)
plot(a)
